{"title":"Unbiased Transmission","markdown":{"headingText":"Unbiased Transmission","headingAttr":{"id":"sec-unbiased-transmission","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n*Note. All quotations come from [here](https://bookdown.org/amesoudi/ABMtutorial_bookdown/model1.html).*\n\n```{r}\n#| message: false\n#| code-fold: true\nlibrary(tidyverse)\ntheme_set(theme_bw(base_family = \"Amiri\"))\n\nlibrary(future.apply)\nplan(multisession, workers = parallel::detectCores() - 1L)\n```\n\n## Introduction\n\nThis is perhaps the simplest possible model of cultural evolution.\n\n> We assume $N$ individuals each of whom possesses one of two cultural traits, denoted $A$ and $B$. Each generation, the $N$ agents are replaced with $N$ new agents. Each new agent picks a member of the previous generation at random and copies their cultural trait. This is known as unbiased oblique cultural transmission: unbiased because traits are copied entirely at random, and oblique because one generation learns from the previous non-overlapping generation (as opposed to horizontal cultural transmission where individuals copy members of the same generation, and vertical cultural transmission where offspring copy their parents---our model is way too simple to have actual parents and offspring though).\n\nGiven this set up, what is the proportion $p$ of individuals that have trait $A$ over successive generations?\n\nFirst we specify the number of fixed parameters in the model.\n\n-   $N$: the number of individuals\n\n-   $t_\\text{max}$: the number of generations\n\n```{r}\nN <- 100\nt_max <- 200\n```\n\nThen we create our agents, which we store in a vector.\n\n```{r}\nagent <- sample(c(\"A\", \"B\"), size = N, replace = TRUE)\n\nstr(agent)\n```\n\nWe also create a vector to track the trait frequency $p$ in each generation.\n\n```{r}\np <- vector(\"double\", length = t_max)\n```\n\nThe parameter $p$ for the first generation is easy to calculate.\n\n```{r}\np[[1]] <- sum(agent == \"A\") / N\n\np[[1]]\n```\n\nWhat we want do next is iterate over $t_\\text{max}$ generations.\n\n```{r}\nfor (t in 2:t_max) {\n  \n  # copy agent to previous_agent \n  previous_agent <- agent  \n  \n  # randomly copy from previous generation's agents\n  agent <- sample(previous_agent, N, replace = TRUE)\n  \n  # get p and put it into the output slot for this generation t\n  p[[t]] <- sum(agent == \"A\") / N\n  \n}\n\ntibble(p) |> \n  mutate(generation = row_number()) |> \n  ggplot(aes(generation, p)) + \n  geom_line() +\n  labs(title = str_glue(\"N = {N}\"))\n\n```\n\n> Unbiased transmission, or random copying, is by definition random, so different runs of this simulation will generate different plots. If you rerun all the code you'll get something different again. \\[...\\] This is a typical feature of cultural drift, analogous to genetic drift: in small populations, with no selection or other directional processes operating, traits can be lost purely by chance.\n\n## Function\n\n```{r}\nUnbiasedTransmission <- function(N, t_max) {\n  \n  agent <- sample(c(\"A\", \"B\"), size = N, replace = TRUE)\n  p <- vector(\"double\", length = t_max)\n  p[[1]] <- sum(agent == \"A\") / N\n  \n  for (t in 2:t_max) {\n    previous_agent <- agent  \n    agent <- sample(previous_agent, N, replace = TRUE)\n    p[[t]] <- sum(agent == \"A\") / N\n  }\n  return(p)\n}\n\ntibble(p = UnbiasedTransmission(300, 500)) |> \n  mutate(generation = row_number()) |> \n  ggplot(aes(generation, p)) + \n  geom_line() +\n  labs(title = str_glue(\"N = 300\"))\n\n```\n\nWe can run this function multiple times now.\n\n```{r}\nS <- 300 ## number of simulations\nG <- 200 ## number of generations\nN <- 100 ## number of individuals\n\nsim <- future_replicate(n = S, UnbiasedTransmission(N, G)) ## parallel replication\ncolnames(sim) <- paste0(\"run\", 1:S)\ndim(sim)\n\ndf <- as_tibble(sim) |> \n  rowid_to_column(\"generation\") |> \n  pivot_longer(cols = !generation, names_to = \"simulation\", values_to = \"p\")\n\ndf |> \n  ggplot(aes(generation, p, group = simulation)) + \n  geom_line(alpha = 1/10)\n```\n\nNote that $p$ seems to go to either 0 or 1 over time. Let's see what happens when we increase the number of generations.\n\n```{r}\nS <- 300 ## number of simulations\nG <- 1e3 ## number of generations\nN <- 100 ## number of individuals\n\nsim <- future_replicate(n = S, UnbiasedTransmission(N, G)) ## parallel replication\ncolnames(sim) <- paste0(\"run\", 1:S)\ndim(sim)\n\ndf <- as_tibble(sim) |> \n  rowid_to_column(\"generation\") |> \n  pivot_longer(cols = !generation, names_to = \"simulation\", values_to = \"p\")\n\ndf |> \n  ggplot(aes(generation, p, group = simulation)) + \n  geom_line(alpha = 1/10)\n```\n\nNow we'll run `UnbiasedTransmission()` with $N = 10,000$.\n\n```{r}\nS <- 300  ## number of simulations\nG <- 1e3 ## number of generations\nN <- 10e3 ## number of individuals\n\nsim <- future_replicate(n = S, UnbiasedTransmission(N, G)) ## parallel replication\ncolnames(sim) <- paste0(\"run\", 1:S)\ndim(sim)\n\ndf <- as_tibble(sim) |> \n  rowid_to_column(\"generation\") |> \n  pivot_longer(cols = !generation, names_to = \"simulation\", values_to = \"p\")\n\ndf |> \n  ggplot(aes(generation, p, group = simulation)) + \n  geom_line(alpha = 1/5) + \n  ylim(0, 1)\n```\n\n*Note that with a large enough population, the proportion stays around 0.5. We can change the original proportion* $p_0$ and see if the results remain similar.\n\n```{r}\nUnbiasedTransmission <- function(N, t_max, p0) {\n  \n  agent <- sample(c(\"A\", \"B\"), size = N, replace = TRUE, prob = c(p0, 1-p0))\n  p <- vector(\"double\", length = t_max)\n  p[[1]] <- sum(agent == \"A\") / N\n  \n  for (t in 2:t_max) {\n    previous_agent <- agent  \n    agent <- sample(previous_agent, N, replace = TRUE)\n    p[[t]] <- sum(agent == \"A\") / N\n  }\n  return(p)\n}\n\nS <- 300    ## number of simulations\nG <- 200    ## number of generations\nN <- 10e3   ## number of individuals\np0 <- 0.16  ## initial proportion of trait \"A\"\n\nsim <- future_replicate(n = S, UnbiasedTransmission(N, G, p0)) \ncolnames(sim) <- paste0(\"run\", 1:S)\ndim(sim)\n\ndf <- as_tibble(sim) |> \n  rowid_to_column(\"generation\") |> \n  pivot_longer(cols = !generation, names_to = \"simulation\", values_to = \"p\")\n\ndf |> \n  ggplot(aes(generation, p, group = simulation)) + \n  geom_line(alpha = 1/5) + \n  geom_hline(yintercept = p0, linetype = \"dashed\", color = \"red\") +\n  ylim(0, 1)\n```\n\n> Unbiased transmission is truly non-directional: it maintains trait frequencies at whatever they were in the previous generation, barring random fluctuations caused by small population sizes.\n>\n> \\[...\\]\n>\n> Even this extremely simple model provides some valuable insights. First, unbiased transmission does not in itself change trait frequencies. As long as populations are large, trait frequencies remain the same.\n>\n> Second, the smaller the population size, the more likely traits are to be lost by chance. This is a basic insight from population genetics, known there as genetic drift, but it can also be applied to cultural evolution. More advanced models of cultural drift (sometimes called \"random copying\") can be found in Cavalli-Sforza & Feldman (1981) and Bentley et al. (2004), with the latter showing that various real-world cultural traits exhibit dynamics consistent with this kind of process, including baby names, dog breeds and archaeological pottery types.\n>\n> Furthermore, generating expectations about cultural change under simple assumptions like random cultural drift can be useful for detecting non-random patterns like selection. If we don't have a baseline, we won't know selection or other directional processes when we see them.\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"unbiased_transmission.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.0.37","bibliography":["references.bib"],"editor":"visual","theme":"lumen","mainfont":"Amiri","monofont":"Fira Code","fontsize":"1em"},"extensions":{"book":{"multiFile":true}}}}}